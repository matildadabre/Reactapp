{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","class","alt","src","monster","id","name","email","CardList","className","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAGaA,EAAO,SAAAC,GAAK,OACpB,sBAAKC,MAAM,iBAAX,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACnB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCDbC,EAAW,SAAAR,GAAK,OAC1B,qBAAKS,UAAU,YAAf,SACMT,EAAMU,SAASC,KAAI,SAAAP,GAAO,OAC3B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCNdO,G,YAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOL,UAAU,SAASM,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCiCjEG,E,kDA9Bb,aAAc,IAAD,8BACX,gBAEKC,MAAO,CACVR,SAAS,GACTS,YAAY,IALH,E,qDAQb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEf,SAAUc,S,oBAE3C,WAAS,IAAD,SACyBE,KAAKR,MAA7BR,EADD,EACCA,SAAUS,EADX,EACWA,YACXQ,EAAmBjB,EAASkB,QAAO,SAAAxB,GAAO,OAC9CA,EAAQE,KAAKuB,cAAcC,SAASX,EAAYU,kBAGpD,OACE,sBAAKpB,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CAAWI,YAAY,oBAAoBC,aAAc,SAAAiB,GAAC,OAAE,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WACjG,cAAC,EAAD,CAAUvB,SAAUiB,W,GAxBRO,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5eeeedc0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.styles.css'\r\n\r\nexport const Card = props =>(\r\n     <div class=\"card-container\">  \r\n     <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}  />   \r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n        </div>\r\n      );","import React from 'react';\r\n\r\nimport './card-list.styles.css';\r\n\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = props =>(\r\n   <div className=\"card-list\">\r\n        {props.monsters.map(monster =>(\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}</div>\r\n);","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange})=>(\r\n    <input className='search' type='search' placeholder={placeholder} onChange={handleChange} />\r\n);\r\n   ","import React, { Component } from 'react';\nimport {CardList} from './components/card-list/card-list.component';\nimport './App.css';\nimport {SearchBox} from './components/search-box/search-box.component';\n\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state ={\n      monsters:[],\n      searchField:''\n    };\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters: users }));\n  }\n  render(){\n    const {monsters, searchField} =this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n\n  return (\n    <div className='App'>\n      <h1>Demo React project</h1>\n      <SearchBox placeholder=\"search monsters..\" handleChange={e=>this.setState({searchField: e.target.value})} />\n      <CardList monsters={filteredMonsters} />     \n     \n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}